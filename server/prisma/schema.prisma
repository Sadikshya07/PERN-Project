generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @unique @default(uuid())
  email        String   @unique
  name         String?
  password     String
  RefreshToken String   @default("")
  resetToken   String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

//home

model adduser {
  id              String   @id @default(uuid())
  name            String
  email           String
  password        String
  confirmpassword String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model addheroimages {
  id        String   @id @default(uuid())
  Page      String
  image1    String
  image2    String
  image3    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model metrics {
  id                  String   @id @default(uuid())
  Students            String
  StudentsPerClass    String
  Teachers            String
  StudentTeacherRatio String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model programs {
  id             String   @id @default(uuid())
  image1         String
  image2         String
  image3         String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model schoolactivities {
  id        String   @id @default(uuid())
  Link      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model schoolinmedia {
  id        String   @id @default(uuid())
  title     String
  Image     String
  author    String
  Link      String
  // id        String   @id @default(uuid())
  // image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//about us

model faculty {
  id              String   @id @default(uuid())
  name            String
  description     String
  department      String
  AreaofExpertise String
  Experience      String
  image           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model management {
  id          String   @id @default(uuid())
  name        String
  description String
  position    String
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model whydss {
  id        String   @id @default(uuid())
  bullets   String
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//programs

model courses {
  id        Int      @id @default(autoincrement())
  grade     String
  file      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model dsscourses {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model weekendcampprogram {
  id          String   @id @default(uuid())
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

//publications

model newsletter {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  image     String
  file      String
  updatedAt DateTime @updatedAt
}

model termsummary {
  id        String   @id @default(uuid())
  name      String
  image     String
  file      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model deerwalker {
  id        String   @id @default(uuid())
  name      String
  image     String
  file      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model analysisreport {
  id        String   @id @default(uuid())
  name      String
  image     String
  file      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model studentcorner {
  id             String   @id @default(uuid())
  studentname    String
  rollnumber     Int
  grade          Int
  articletitle   String
  articlecontent String
  image          String
  file           String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model podcast {
  id            String   @id @default(uuid())
  title         String
  presentername String
  grade         Int
  description   String
  rollnumber    Int
  image         String
  file          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

//dss in year

model booklist {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model calendar {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model lessonplan {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//other pages

model dssclubs {
  id          String   @id @default(uuid())
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model popup {
  id        String   @id @default(uuid())
  Image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HomeImage {
  id        String   @id @default(uuid())
  image1    String
  image2    String
  image3    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//community

model newsandevents {
  id          String   @id @default(uuid())
  title       String
  description String
  author      String
  image1      String
  image2      String
  publishdate DateTime @db.Date
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
